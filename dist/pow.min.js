/**
 * @license MIT
 * @author IFYates <https://github.com/ifyates/pow.js>
 * @description A very small and lightweight templating framework.
 * @version 1.4.0
 */
function e(e,t=["if","ifnot","item","array","template"]){for(let r of t.filter((t=>e.hasAttribute(t)))){let t=e.getAttribute(r);return e.removeAttribute(r),{attr:r,expr:t}}return 0}let t=(e,t)=>e.replace(/\{\{\s*(.*?)\s*\}\}/gs,((e,n)=>r(n,t)??""));function r(e,t,r=e){try{let n="*"==e[0]&&(r=e.slice(1))?t:t?.data,o=s._eval(r,n);if("function"==typeof o){let e=`_${Math.random().toString(36).slice(2)}`;return window.$pow$[e]=e=>o.call(e,t.data,t.root),`$pow$.${e}(this)`}return o}catch(r){console.warn("Interpolation failed",{"*path":t.path,expr:e},r)}}function n(t,r){if(t?.attributes.pow){let{attr:n,expr:o}=e(t,["else-if","else-ifnot","else"]);if(n&&r)return!t.remove();n&&"else"!=n&&t.setAttribute(n.slice(5),o)}}let o=e=>(e.content??e).querySelector("*[pow]:not([pow] [pow])"),a=(e,t,r)=>{for(;n(e.nextElementSibling,t););return(r||!t)&&e.remove()};function i(n,l,s){let{attr:p,expr:c}=e(n);if("template"==p&&(s=document.getElementById(c))){let e=s.cloneNode(1);return n.parentNode.replaceChild(e,n),i(e,l)}if(s=c?r(c,l):l.data,"if"==p||"ifnot"==p)return a(n,"if"==p!=!s);if("item"==p&&c){if(null==s)return n.remove();l={...l,path:`${l.path}.${c}`,data:s,parent:l.data}}else if("array"==p){s=!s||Array.isArray(s)?s:Object.entries(s).map((([e,t])=>({key:e,value:t})));for(let e=0;e<s?.length;++e){let t=n.cloneNode(1);n.parentNode.insertBefore(t,n),i(t,{...l,path:`${l.path}${c?`.${c}`:""}[${e}]`,index:e,first:!e,last:e>s.length-2,data:s[e],parent:l})}return a(n,s?.length,1)}for(n.removeAttribute("pow");s=o(n);)i(s,l);for(let{name:e,value:o}of[...n.attributes])"$"==e[0]?(n.removeAttribute(e),(o=r(o,l))&&n.setAttribute(e.slice(1),o)):["","false","0"].includes(o=t(o,l))?n.removeAttribute(e):n.setAttribute(e,o);s=t(n.innerHTML,l),n instanceof HTMLTemplateElement?(n.insertAdjacentHTML("afterend",s),n.remove()):n.innerHTML=s}function l(e){let t=e.innerHTML,r=[...e.attributes],n={apply:o=>n.$pow?console.warn("Binding already in progress"):(n.$pow=1,window.$pow$={},e.innerHTML=t,r.forEach((t=>e.setAttribute(t.name,t.value))),i(e,{path:"*root",data:o,root:o}),delete n.$pow,n.refresh=()=>n.apply(o),n),refresh:()=>{}};return n}let s={apply:(e,t)=>l(e).apply(t),bind:l,_eval:(e,t,r)=>(r=Object.entries(t||{}).filter((e=>isNaN(e[0]))),new Function(...r.map((e=>e[0])),`return ${e}`).call(t,...r.map((e=>e[1]))))};export default s;