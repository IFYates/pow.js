/**
 * @license MIT
 * @author IFYates <https://github.com/ifyates/pow.js>
 * @description A very small and lightweight templating framework.
 * @version 2.1.0
 */
let e="else",t="if",r="ifnot",a="innerHTML",n="content",o=(e,t,r)=>e.setAttribute(t,r),l=(e,t)=>e.removeAttribute(t),i=Math.random,p=(e,t)=>(e[n]??e).querySelectorAll(t),s=(e,t,r)=>c(e.replace(/{{\s*(.*?)\s*}}/gs,((e,r)=>u(r,t)??"")),r),c=(e,t)=>t?e:e.replace(/({|p)({|ow)/g,"$1​$2​"),u=(e,t,r=$(t))=>{try{let a=w._eval(e,r);if("function"==typeof a){let e=i();return window[t.$id][e]=e=>a.call(e,r),t.$id+"["+e+"](this)"}return a}catch(r){console.warn("Interpolation failed",{$path:t.$path,expr:e},r)}},$=e=>e.$parent?{...e.$data,...e,$parent:$(e.$parent)}:{...e.$data,...e},d=(a,n)=>{if(a?.attributes.pow)for(let{name:i,value:p}of a.attributes)if([e+"-"+t,e+"-"+r,e].includes(i))return l(a,i),n?!a.remove():i!=e&&o(a,i.slice(5),p)},f=(e,t,r)=>{for(;d(e.nextElementSibling,t););return r|!t&&e.remove()},m=(e,i,$,d)=>{for(let t of p(e,"*[pow][stop]"))t.replaceWith(document.createRange().createContextualFragment(c(t.outerHTML)));l(e,"pow");for(let{name:n,value:c}of[...e.attributes]){if(l(e,n),"template"==n)return d=document.getElementById(c)?.cloneNode(1)||e,e[a]=d[a].replace(/<param(?:\s+id=["']([^"']+)["'])?\s*\/?>/g,((t,r)=>p(e,"template"+(r?"#"+r:""))[0]?.[a]??"")),m(e,i);if(d=()=>d=c?u(c,i):i.$data,":"==n[0])return d()&&o(e,n.slice(1),d),m(e,i);if("data"==n&&c)return null==d()?e.remove():m(e,{...i,$path:i.$path+"."+c,$data:d,$parent:i},$);if(n==t|n==r)return d=n==t!=!d(),f(e,d),d&&m(e,i,$);if("array"==n){d=!d()|Array.isArray(d)?d:Object.entries(d).map((([e,t])=>({key:e,value:t})));for(let t=0;t<d?.length;++t){let r=e.cloneNode(1);e.parentNode.insertBefore(r,e),m(r,{...i,$path:i.$path+(c?"."+c:"")+"["+t+"]",$index:t,$first:!t,$last:t>d.length-2,$data:d[t],$array:d,$parent:i})}return f(e,d?.length,1)}(d=s(c,i,$))&&o(e,n,d)}for(;d=p(e,"*[pow]:not([pow] [pow])")[0];)m(d,i);e[a]=s(e[a],i,$),"TEMPLATE"==e.tagName&&e.replaceWith(...e[n].childNodes)},h=e=>{let t=e[a],r=[...e.attributes],n="$pow_"+i().toString(36).slice(2),l={apply:i=>{if(l.$pow)return console.warn("Binding already in progress");l.$pow=1,e[a]=t,r.forEach((t=>o(e,t.name,t.value))),window[n]={};try{m(e,{$id:n,$path:"$root",$data:i,$root:i},1)}finally{e[a]=e[a].replace(/​/g,""),delete l.$pow}return l.refresh=()=>l.apply(i),l},refresh:()=>{}};return l},w={apply:(e,t)=>h(e).apply(t),bind:h,_eval:(e,t)=>{let r=Object.entries(t).filter((e=>isNaN(e[0])));return new Function(...r.map((e=>e[0])),"return "+e).call(t.$data,...r.map((e=>e[1])))}};export default w;