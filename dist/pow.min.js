/**
 * @license MIT
 * @author IFYates <https://github.com/ifyates/pow.js>
 * @description A very small and lightweight templating framework.
 * @version 3.0.1
 */
let e="$data",t="$parent",r="$path",n="$root",o="else",a="template",i="content",l="innerHTML",s="outerHTML",c="replace",p=(e,t,r)=>e.setAttribute(t,r),f=(e,t)=>e.removeAttribute(t),u=Math.random,d=(e,t)=>(e[i]??e).querySelectorAll(t),$=(n,m,y,g)=>{let h=e=>b(e[c](/{{\s*(.*?)\s*}}/gs,((e,t)=>N(t)??"")),y),b=(e,t)=>t?e:e[c](/({|p)({|ow)/g,"$1​$2​"),v=(e,t,r=n.nextElementSibling)=>(!e&&r?.attributes.pow&&f(r,o),t|!e&&!n.remove()),N=(e,t=x(m))=>{try{let r=w._eval(e,t);if("function"==typeof r){let e=u();return window[m.$id][e]=e=>r.call(e,t),m.$id+"["+e+"](this)"}return r}catch(t){console.warn("Interpolation failed",{[r]:m[r],expr:e},t)}},x=r=>r[t]?{...r[e],...r,[t]:x(r[t])}:{...r[e],...r};for(let e of[...d(n,"*")].filter((e=>e.tagName.startsWith("POW:"))))e[s]=e[s][c](/^<pow:([\w-]+)/i,`<${a} pow ${a}="$1"`);for(let e of d(n,"*[pow][stop]"))e.replaceWith(document.createRange().createContextualFragment(b(e[s])));f(n,"pow");for(let{name:i,value:s}of[...n.attributes]){if(f(n,i),i==a&&!v(g=document.getElementById(s)?.cloneNode(1)))return n[l]=g[l][c](/<param(?:\s+id=["']([^"']+)["'])?\s*\/?>/g,((e,t)=>d(n,a+(t?"#"+t:""))[0]?.[l]??(t?"":n[l]))),$(n,m);if(g=()=>g=s?N(s):m[e],":"==i[0])return g()&&p(n,i.slice(1),g),$(n,m);if(":"==i.at(-1))m={...m,[e]:{...m[e],[i.slice(0,-1)]:g()}};else{if("data"==i&&s)return v(null!=g())?0:$(n,{...m,[r]:m[r]+"."+s,[e]:g,[t]:m},y);if("if"==i|"ifnot"==i){if(v("if"==i!=!g()))return}else{if(i==o)return n.remove();if("array"==i){g=!g()|Array.isArray(g)?g:Object.entries(g).map((([e,t])=>({key:e,value:t})));for(let o=0;o<g?.length;++o){let a=n.cloneNode(1);n.parentNode.insertBefore(a,n),$(a,{...m,[r]:m[r]+(s?"."+s:"")+"["+o+"]",$index:o,$first:!o,$last:o>g.length-2,[e]:g[o],$array:g,[t]:m})}return v(g?.length,1)}(g=h(s))&&p(n,i,g)}}}for(;g=d(n,"*[pow]:not([pow] [pow])")[0];)$(g,m);n[l]=h(n[l]),n.localName==a&&n.replaceWith(...n[i].childNodes)},m=t=>{let o=t[l],a=[...t.attributes],i="$pow_"+u().toString(36).slice(2),s={apply:f=>{if(s.$)return console.warn("Binding already in progress");s.$=1,t[l]=o,a.forEach((e=>p(t,e.name,e.value))),window[i]={};try{$(t,{$id:i,[r]:n,[e]:f,[n]:f},1)}finally{t[l]=t[l][c](/​/g,""),delete s.$}return s.refresh=()=>s.apply(f),s},refresh:()=>{}};return s},w={apply:(e,t)=>m(e).apply(t),bind:m,_eval:(t,r)=>{let n=Object.entries(r).filter((e=>isNaN(e[0])));return new Function(...n.map((e=>e[0])),"return "+t).call(r[e],...n.map((e=>e[1])))}};export default w;