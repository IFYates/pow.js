/**
 * @license MIT
 * @author IFYates <https://github.com/ifyates/pow.js>
 * @description A very small and lightweight templating framework.
 * @version 1.4.0
 */
function t(t,e=["if","ifnot","item","array","template"]){for(let r of e.filter((e=>t.hasAttribute(e)))){let e=t.getAttribute(r);return t.removeAttribute(r),{attr:r,expr:e}}return 0}let e=(t,e)=>t.replace(/\{\{\s*(.*?)\s*\}\}/gs,((t,n)=>r(n,e)??""));function r(t,e,r=t){try{let n="*"==t[0]&&(r=t.slice(1))?e:e.data,o=s._eval(r,n);if("function"==typeof o){let t=`_${Math.random().toString(36).slice(2)}`;return window.$pow$[t]=t=>o.call(t,e.data,e.root),`$pow$.${t}(this)`}return o}catch(r){console.warn("Interpolation failed",{"*path":e.path,expr:t},r)}}function n(e,r){if(e?.attributes.pow){let{attr:n,expr:o}=t(e,["else-if","else-ifnot","else"]);if(n&&r)return!e.remove();n&&"else"!=n&&e.setAttribute(n.slice(5),o)}}let o=t=>(t.content??t).querySelector("*[pow]:not([pow] [pow])"),a=(t,e,r)=>{for(;n(t.nextElementSibling,e););return(r||!e)&&t.remove()};function i(n,l,s){let{attr:p,expr:c}=t(n);if("template"==p&&(s=document.getElementById(c))){let t=s.cloneNode(1);return n.parentNode.replaceChild(t,n),i(t,l)}if(s=c?r(c,l):l.data,"if"==p||"ifnot"==p)return a(n,"if"==p!=!s);if("item"==p&&c){if(null==s)return n.remove();l={...l,path:`${l.path}.${c}`,data:s,parent:l.data}}else if("array"==p){s=!s||Array.isArray(s)?s:Object.entries(s).map((([t,e])=>({key:t,value:e})));for(let t=0;t<s?.length;++t){let e=n.cloneNode(1);n.parentNode.insertBefore(e,n),i(e,{...l,path:`${l.path}${c?`.${c}`:""}[${t}]`,index:t,first:!t,last:t>s.length-2,data:s[t],parent:l})}return a(n,s?.length,1)}for(n.removeAttribute("pow");s=o(n);)i(s,l);for(let{name:t,value:o}of[...n.attributes])"$"==t[0]?(n.removeAttribute(t),(o=r(o,l))&&n.setAttribute(t.slice(1),o)):(o=e(o,l)||"")?n.setAttribute(t,o):n.removeAttribute(t);s=e(n.innerHTML,l),n instanceof HTMLTemplateElement?(n.insertAdjacentHTML("afterend",s),n.remove()):n.innerHTML=s}function l(t){let e=t.innerHTML,r=[...t.attributes],n={apply:o=>n.$pow?console.warn("Binding already in progress"):(n.$pow=1,window.$pow$={},t.innerHTML=e,r.forEach((e=>t.setAttribute(e.name,e.value))),i(t,{path:"*root",data:o,root:o}),delete n.$pow,n.refresh=()=>n.apply(o),n),refresh:()=>{}};return n}let s={apply:(t,e)=>l(t).apply(e),bind:l,_eval:(t,e)=>{let r=Object.entries(e||{}).filter((t=>isNaN(t[0])));return new Function(...r.map((t=>t[0])),`return ${t}`).call(e,...r.map((t=>t[1])))}};export default s;