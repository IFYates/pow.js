/**
 * @license MIT
 * @author IFYates <https://github.com/ifyates/pow.js>
 * @description A very small and lightweight templating framework.
 * @version 2.0.1
 */
let e=(e,t,r)=>e.setAttribute(t,r),t=(e,t)=>e.removeAttribute(t),r=Math.random,a=(e,t)=>(e.content??e).querySelectorAll(t),n="array",o="data",l="else",i="if",p="ifnot",c="innerHTML",s=(e,t,r)=>u(e.replace(/{{\s*(.*?)\s*}}/gs,((e,r)=>$(r,t)??"")),r),u=(e,t)=>t?e:e.replace(/({|p)({|ow)/g,"$1​$2​"),$=(e,t,a=d(t))=>{try{let n=y._eval(e,a);if("function"==typeof n){let e=r();return window[t.$id][e]=e=>n.call(e,a),t.$id+"["+e+"](this)"}return n}catch(r){console.warn("Interpolation failed",{$path:t.$path,expr:e},r)}},d=e=>e.$parent?{...e.$data,...e,$parent:d(e.$parent)}:{...e.$data,...e},f=(r,a)=>{if(r?.attributes.pow)for(let{name:n,value:o}of r.attributes)if([l+"-"+i,l+"-"+p,l].includes(n))return t(r,n),a?!r.remove():n!=l&&e(r,n.slice(5),o)},h=(e,t,r)=>{for(;f(e.nextElementSibling,t););return r|!t&&e.remove()},m=(r,l,d,f)=>{for(let e of a(r,"*[pow][stop]"))e.replaceWith(document.createRange().createContextualFragment(u(e.outerHTML)));t(r,"pow");for(let{name:a,value:u}of[...r.attributes]){if(t(r,a),"template"==a)return(f=document.getElementById(u))&&(r[c]=f.cloneNode(1)[c]),m(r,l);if(":"==a[0]||[i,p,o,n].includes(a)){if(f=u?$(u,l):l.$data,":"==a[0])return f&&e(r,a.slice(1),f),m(r,l);if(a==o&&u)return null==f?r.remove():m(r,{...l,$path:l.$path+"."+u,$data:f,$parent:l},d);if(a==i|a==p)return h(r,f=a==i!=!f),f&&m(r,l,d);f=!f|Array.isArray(f)?f:Object.entries(f).map((([e,t])=>({key:e,value:t})));for(let e=0;e<f?.length;++e){let t=r.cloneNode(1);r.parentNode.insertBefore(t,r),m(t,{...l,$path:l.$path+(u?"."+u:"")+"["+e+"]",$index:e,$first:!e,$last:e>f.length-2,$data:f[e],$array:f,$parent:l})}return h(r,f?.length,1)}(f=s(u,l,d))&&e(r,a,f)}for(;f=a(r,"*[pow]:not([pow] [pow])")[0];)m(f,l);r[c]=s(r[c],l,d),"TEMPLATE"==r.tagName&&r.replaceWith(...r.content.childNodes)},w=t=>{let a=t[c],n=[...t.attributes],o="$pow_"+r().toString(36).slice(2),l={apply:r=>{if(l.$pow)return console.warn("Binding already in progress");l.$pow=1,t[c]=a,n.forEach((r=>e(t,r.name,r.value))),window[o]={};try{m(t,{$id:o,$path:"$root",$data:r,$root:r},1)}finally{t[c]=t[c].replace(/​/g,""),delete l.$pow}return l.refresh=()=>l.apply(r),l},refresh:()=>{}};return l},y={apply:(e,t)=>w(e).apply(t),bind:w,_eval:(e,t)=>{let r=Object.entries(t).filter((e=>isNaN(e[0])));return new Function(...r.map((e=>e[0])),"return "+e).call(t.$data,...r.map((e=>e[1])))}};export default y;