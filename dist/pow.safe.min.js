/**
 * @license MIT
 * @author IFYates <https://github.com/ifyates/pow.min.js>
 * @description A very small and lightweight templating framework.
 * @version 1.3.0
 */
import e from"./pow.min.js";function t(t){let n=e.bind(t),o=n.apply;return n.apply=e=>{let n=o(e);return function(e){let t=[...e.querySelectorAll("*")].map((e=>[...e.attributes])).flat().filter((e=>e.name.startsWith("on")));for(let{ownerElement:e,name:n,value:o}of t){let t=/^\$pow\$\.(\w+)/.exec(o);t&&(e.addEventListener(n.slice(2),(()=>window.$pow$[t[1]](e))),e.removeAttribute(n))}}(t),n},n}e._eval=(t,n,o)=>{let r=t.indexOf(".");if(r<0){if(t.endsWith("()")){let o=e._eval(t.slice(0,-2),n,1);return"function"==typeof o?o(n):void 0}return n?.hasOwnProperty(t)?n[t]:"length"==t&&"object"==typeof n?Object.keys(n).length:o?void 0:window[t]}let i=e._eval(t.slice(0,r),n,1);return e._eval(t.slice(r+1),i,1)};export default{...e,apply:(e,n)=>t(e).apply(n),bind:t};